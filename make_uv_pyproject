#!/bin/bash -eu

# ****************************************************************************
# DESCTIPTION
# Simple tool to initialize a uv based python projectz with pytest setup
# and a Makefile.
#
# bugs and hints: lrsklemstein@gmail.com
# ****************************************************************************


# ----------------------------------------------------------------------------
# constants
# ----------------------------------------------------------------------------

readonly PROG=${0##*/}


# ----------------------------------------------------------------------------
# functions
# ----------------------------------------------------------------------------

add_pytest_params_to_pyproject_toml() {
local toml_file=$1

/bin/cat >>$toml_file << EOF

[tool.pytest.ini_options]
pythonpath = "./src"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
markers = [
    'int: integration test',
    'unit: unit test',
]
EOF
}

create_pytest_python_uv_makefile() {
local path="$1"

/bin/cat >$path <<EOF
.PHONY: test
test:
	uv run pytest -v

.PHONY: unit_test
unit_test:
	uv run pytest -m unit -v

.PHONY: int_test
int_test:
	uv run pytest -m int -v
EOF
}

make_uv_run_wrapper() {
local pyprog="$1"

local wrapper=${pyprog%.py}

if [ "$pyprog" = "$wrapper" ]
then
    echo "Not possible, wrapper would have same name" >&2
    return 1
fi

/bin/cat >$wrapper <<EOF
#!/bin/bash -eu

uv run ./$pyprog "\$@"
EOF

chmod +x $wrapper

}


# ----------------------------------------------------------------------------
# main
# ----------------------------------------------------------------------------

if [ $# -ne 1 -a $# -ne 2 ]
then
    echo -e "\nUsage: ${PROG} DIR [app|lib] (default: app)\n" >&2
    exit 2
fi

dir="$1"
type="${2:-app}"

if [ -d "$dir" ]
then
    echo "Project dir \"$dir\" already exist."
    return 1
fi

if [ $type != lib -a $type != app ]
then
    echo "Type must be \"app\" or \"lib\"" >&2
    return 1
fi

uv init --${type} --vcs git --author-from git "$dir"

cd "$dir"

uv add --dev pytest pytest-coverage

mkdir -p ./test/{int,unit}

for dir in test test/{int,unit}
do
    touch "${dir}/__init__.py"
done

if [ "$type" = app ]
then
    mkpy ${dir##*/}.py
    /bin/rm -f main.py
fi

add_pytest_params_to_pyproject_toml pyproject.toml

create_pytest_python_uv_makefile Makefile


git add -A .
git commit -m "initial version"

echo
echo "Created" | boxes -d ansi-rounded
echo
/bin/ls -l --color=always
echo

exit 0
