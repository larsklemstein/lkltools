#!/bin/bash -eu

# ****************************************************************************
# DESCRIPTON
#    Creates a yarn based typescript project
# 
#    Installation steps friendly copied from:
#
#    https://losikov.medium.com/
#    part-1-project-initial-setup-typescript-node-js-31ba3aa7fbf1
# ****************************************************************************

# bugs and hints: lrsklemstein@gmail.com



# --- constants

readonly PROG=${0##*/}


# --- functions

msg() {
    echo "[$PROG] $*" >&2
}

abort() {
    msg "$*"
    exit 1
}


# --- main

if [ $# -ne 1  ]
then
    echo "usage: $PROG DIR"
    exit 2
fi

project_dir="$(readlink -f $1)"

src_dir=$project_dir/src
out_dir=$project_dir/dist

app_ts=$src_dir/app.ts
app_js=$out_dir/app.js


test -d "$project_dir" && abort "dir \"$project_dir\" already exist."

mkdir -p "$project_dir"

cd "$project_dir"


msg 'init...'
yarn init -y

msg "Install typescript and save package to dev dependencies..."
yarn add -D typescript

msg 'Create tsconfig.json, required for tsc and ts-node...'

/bin/cat >$project_dir/tsconfig.json <<EOF
{
  "compilerOptions": {
    "target": "es2016",
    "lib": ["es2019"],
    "module": "commonjs",
    "rootDir": "${src_dir}",
    "outDir": "${out_dir}",
    "esModuleInterop": true,
    "strict": true,
    "noImplicitAny": true,
    "skipLibCheck": true
  },
  "include": ["src/**/*"],
}
EOF


msg "Install @types/node, nodemon + ts-node..."
yarn add -D @types/node nodemon ts-node

mkdir $src_dir $out_dir

msg "Create initial ${app_ts}..."
/bin/cat >$app_ts << EOF
// your code here...

console.log('Hello from app.ts...');
EOF

msg "Add yarn scripts to package.json..."

# '.scripts={compile:"npx tsc", run:"node src/app.js"}' 
#
jqc='.scripts={'
jqc+='compile:"npx tsc", execute:"node '$app_js'"'
jqc+='}'

tmpf=$(mktemp)

jq "$jqc" < package.json >$tmpf

mv $tmpf package.json

msg "Done!"
